From b89d3ff243691d2b2d108fef9ad5fe931042aed1 Mon Sep 17 00:00:00 2001
From: isabel <isabel@isabelroses.com>
Date: Thu, 5 Dec 2024 17:33:24 +0000
Subject: [PATCH] feat(builtins): pow
---
 lix/libexpr/builtins/pow.md |  5 +++++
 lix/libexpr/meson.build     |  1 +
 lix/libexpr/primops.cc      | 11 +++++++++++
 3 files changed, 17 insertions(+)
 create mode 100644 lix/libexpr/builtins/pow.md

diff --git a/lix/libexpr/builtins/pow.md b/lix/libexpr/builtins/pow.md
new file mode 100644
index 000000000..4a21084b9
--- /dev/null
+++ b/lix/libexpr/builtins/pow.md
@@ -0,0 +1,5 @@
+---
+name: pow
+args: [e1, e2]
+---
+Return the result of *e1* to the power of *e2*.
diff --git a/lix/libexpr/meson.build b/lix/libexpr/meson.build
index 9b029e562..10752c93c 100644
--- a/lix/libexpr/meson.build
+++ b/lix/libexpr/meson.build
@@ -122,6 +122,7 @@ builtin_definitions = files(
   'builtins/path.md',
   'builtins/pathExists.md',
   'builtins/placeholder.md',
+  'builtins/pow.md',
   'builtins/readDir.md',
   'builtins/readFile.md',
   'builtins/readFileType.md',
diff --git a/lix/libexpr/primops.cc b/lix/libexpr/primops.cc
index 2fae74194..12d867292 100644
--- a/lix/libexpr/primops.cc
+++ b/lix/libexpr/primops.cc
@@ -2443,6 +2443,17 @@ static void prim_div(EvalState & state, Value * * args, Value & v)
     }
 }
 
+static void prim_pow(EvalState & state, Value * * args, Value & v)
+{
+    state.forceValue(*args[0], noPos);
+    state.forceValue(*args[1], noPos);
+
+    NixFloat f1 = state.forceFloat(*args[0], noPos, "while evaluating the first operand of the exponentiation");
+    NixFloat f2 = state.forceFloat(*args[1], noPos, "while evaluating the second operand of the exponentiation");
+    v.mkFloat(std::pow(f1, f2));
+}
+
+
 static void prim_bitAnd(EvalState & state, Value * * args, Value & v)
 {
     auto i1 = state.forceInt(*args[0], noPos, "while evaluating the first argument passed to builtins.bitAnd");
-- 
2.47.0
