#!/usr/bin/env bash

function strength {
    WIFI_STRENGTH=$(awk 'NR==3 {printf("%.0f",$3*10/7)}' /proc/net/wireless)
    echo $WIFI_STRENGTH
}

function wifi_icon {
    CONNECTIVITY=$(nmcli networking connectivity)
    WIFI_STATUS=$(nmcli device | grep wlo1 | awk '{print $3}' | head -n 1)
    WIFI_STRENGTH=$(strength)

    if [[ $WIFI_STATUS != 'connected' ]]; then echo '󰤮'; return; fi
    if [[ $CONNECTIVITY == 'none'    ]]; then echo '󰪎'; return; fi
    if [[ $CONNECTIVITY == 'unknown' ]]; then echo '󰤭'; return; fi
    if [[ $CONNECTIVITY == 'portal'  ]]; then echo '󰤪'; return; fi
    if [[ $CONNECTIVITY == 'limited' ]]; then echo '󰪎'; return; fi
    if [[ $CONNECTIVITY == 'full'    ]]; then
        if [[ $WIFI_STRENGTH -ge 80 ]]; then echo '󰤨'; return; fi
        if [[ $WIFI_STRENGTH -ge 60 ]]; then echo '󰤥'; return; fi
        if [[ $WIFI_STRENGTH -ge 40 ]]; then echo '󰤢'; return; fi
        if [[ $WIFI_STRENGTH -ge 20 ]]; then echo '󰤟'; return; fi
        if [[ $WIFI_STRENGTH -ge  0 ]]; then echo '󰤯'; return; fi
    fi
}

function icon {
    CONNECTIVITY=$(nmcli networking connectivity)
    WIRED_STATUS=$(nmcli device | grep enp2s0 | awk '{print $3}')

    if [[ $WIRED_STATUS == 'connected' ]]; then
        if [[ $CONNECTIVITY == 'none'    ]]; then echo '󰪎'; return; fi
        if [[ $CONNECTIVITY == 'unknown' ]]; then echo '󰲜'; return; fi
        if [[ $CONNECTIVITY == 'portal'  ]]; then echo '󰲛'; return; fi
        if [[ $CONNECTIVITY == 'limited' ]]; then echo '󰪎'; return; fi
        if [[ $CONNECTIVITY == 'full'    ]]; then echo '󰛳'; return; fi
    fi

    wifi_icon
}

function ssid {
    WIRED_STATUS=$(nmcli device | grep enp2s0 | awk '{print $3}')
    WIFI_STATUS=$(nmcli device | grep wlo1 | awk '{print $3}' | head -n 1)

    if   [[ $WIRED_STATUS == 'connected' ]]; then echo 'Wired'
    elif [[ $WIFI_STATUS == 'connected' ]]; then
        echo $(nmcli device | grep wlo1 | awk '{print $4}')
    else    
        echo 'Not Connected'
    fi
}

function state {
    CONNECTIVITY=$(nmcli networking connectivity)
    if [[ $CONNECTIVITY == 'none' ]]; then echo 'off'
    else echo 'on'; fi
}

function toggle {
    STATE=$(nmcli radio wifi)
    if [[ $STATE == 'enabled' ]]; then nmcli radio wifi off
    else nmcli radio wifi on; fi
    eww update network_icon=$(icon)
    eww update network_status=$(state)
}

if [[ $1 == 'wifi_icon' ]]; then wifi_icon; fi
if [[ $1 == 'icon' ]]; then icon; fi
if [[ $1 == 'ssid' ]]; then ssid; fi
if [[ $1 == 'strength' ]]; then strength; fi
if [[ $1 == 'state' ]]; then state; fi
if [[ $1 == 'toggle' ]]; then toggle; fi
