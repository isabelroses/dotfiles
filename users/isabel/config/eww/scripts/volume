#!/usr/bin/env bash
VOLUME=$(pactl get-sink-volume @DEFAULT_SINK@ | awk -F "/" '{print $4}' | tr -d "%")
MUTED=$(pactl get-sink-mute @DEFAULT_SINK@ | awk '{print $2}')

function icon {
	if [[ $MUTED == "no" ]]; then
		if [[ $VOLUME -ge 66 ]]; then
			echo '󰕾'
		elif [[ $VOLUME -ge 33 ]]; then
			echo '󰖀'
		elif [[ $VOLUME -ge 1 ]]; then
			echo '󰕿'
		else
			echo '󰝟'
		fi
	else
		echo '󰝟'
	fi
}

function level {
	if [[ $MUTED == "yes" ]]; then
		echo 0
	else
		echo $VOLUME
	fi
}

function lower {
	pactl set-sink-volume @DEFAULT_SINK@ -5%
	update
}

function raise {
	pactl set-sink-volume @DEFAULT_SINK@ +5%
	update
}

function mute {
	pactl set-sink-mute @DEFAULT_SINK@ toggle
}

function update {
	eww update volume="$(get)"
	~/.config/eww/scripts/osd $(icon) $(level)
}

function type_icon {
	SINK=$(pactl get-default-sink)
	if [[ $SINK == *'bluez_output'* ]]; then
		echo "󰋋"
	else
		echo "󰓃"
	fi
}

function mic_mute_state {
	STATE=$(pactl get-source-mute @DEFAULT_SOURCE@ | awk '{print $2}')
	if [[ $STATE == 'no' ]]; then
		echo 'off'
	else echo 'on'; fi
}

function mic_mute_icon {
	STATE=$(mic_mute_state)
	if [[ $STATE == 'off' ]]; then
		echo '󰍬'
	else echo '󰍭'; fi
}

function mute_mic {
	pactl set-source-mute @DEFAULT_SOURCE@ toggle
	eww update volume="$(get)"
}

function set {
	pactl set-sink-volume @DEFAULT_SINK@ $1"%"
	eww update volume="$(get)"
}

function get {
	echo "{
  \"level\": \"$(level)\",
  \"icon\": \"$(icon)\",
  \"type_icon\": \"$(type_icon)\",
  \"mute\": {
  \"state\": \"$(mic_mute_state)\",
  \"icon\": \"$(mic_mute_icon)\"
}
}"
}

if [[ $1 == 'mute_mic' ]]; then mute_mic; fi
if [[ $1 == 'down' ]]; then lower; fi
if [[ $1 == 'up' ]]; then raise; fi
if [[ $1 == 'mute' ]]; then mute; fi
if [[ $1 == 'set' ]]; then set $2; fi
if [[ $1 == 'get' ]]; then get; fi
